#!/usr/bin/env python 
# -*- coding: UTF-8 -*-
from dbfpy import dbf
import psycopg2
import datetime
import sys
import parus_id_to_odoo
def post_func(directory,dbname,userr,pas,hostt,portt):
	ank = dbf.Dbf(directory+"zoleav.dbf")
	f_ank = open(directory+'oleav.csv', 'w')
	f_ank.write ("ID; ORGBASE_RN; FCAC_RN; DAYTYPE_RN; STARTDATE; ENDDATE\n")
	#print len(ank)
	for i in ank:
		if i.deleted or i["OLEAV_RN"] == None  or i["FCAC_RN"] == None or i["DAYTYPE_RN"] == None or i ["ORGBASE_RN"] == None or i ["STARTDATE"] == None or i ["ENDDATE"] == None:
			continue
		if not  i ["ORGBASE_RN"] or not i["DAYTYPE_RN"] or not i["OLEAV_RN"] or not i["FCAC_RN"] or parus_id_to_odoo.parusIndexToOdoo ( i ["FCAC_RN"].decode('cp1251').encode('utf-8').decode('utf-8') ) in [33,1939,1317,3132,3372,3127,257,313]:
			continue
		if i["STARTDATE"] < datetime.date(2014,12,01):
		    continue
		f_ank.write ("\""+ str ( parus_id_to_odoo.parusIndexToOdoo ( i ["OLEAV_RN"].decode('cp1251').encode('utf-8').decode('utf-8') ))+"\"" +"; ")
		f_ank.write ("\""+ str ( parus_id_to_odoo.parusIndexToOdoo ( i ["ORGBASE_RN"].decode('cp1251').encode('utf-8').decode('utf-8') ))+"\""+"; ")
		f_ank.write ("\""+ str ( parus_id_to_odoo.parusIndexToOdoo ( i ["FCAC_RN"].decode('cp1251').encode('utf-8').decode('utf-8') ))+"\""+"; ")
		f_ank.write ("\""+ str ( parus_id_to_odoo.parusIndexToOdoo ( i ["DAYTYPE_RN"].decode('cp1251').encode('utf-8').decode('utf-8') ))+"\""+"; ")
		f_ank.write ("\""+ str( i["STARTDATE"] ) +"\""+"; "+"\""+ str (i["ENDDATE"] )+"\""+"\n")


 	print "zoleav.dbf to oleav.csv [ ok ]"
	f_ank.close()
	#CONNECT TO DATABASE
	con = psycopg2.connect(database=dbname, user=userr,password=pas,host=hostt,port=portt)
	cur = con.cursor()
	#cur.execute ("DELETE from tabel_ank;")
	
	#OPEN CSV FILE GENERATED BY syncronize.py script
	my_file = open(directory+'oleav.csv')

	#CREATE TEMP TABLE
	cur.execute("CREATE TEMP TABLE tmp_z (ID int, ORGBASE_RN int, FCAC_RN int, DAYTYPE_RN int, STARTDATE date, ENDDATE date);") 
	cur.copy_expert("COPY tmp_z FROM STDIN WITH DELIMITER ';' CSV HEADER;", my_file)

	#UPDATE DATA
	cur.execute("UPDATE tabel_oleav SET  DAYTYPE_RN=tmp_z.DAYTYPE_RN, FCAC_RN=tmp_z.FCAC_RN, ORGBASE_RN=tmp_z.ORGBASE_RN, STARTDATE=tmp_z.STARTDATE, ENDDATE=tmp_z.ENDDATE FROM tmp_z WHERE  tabel_oleav.id = tmp_z.id;")

	#INSERT DATA add something which lacks
	cur.execute("INSERT INTO tabel_oleav (id, orgbase_rn, fcac_rn, daytype_rn, startdate, enddate) SELECT T.id, T.ORGBASE_RN, T.FCAC_RN, T.DAYTYPE_RN, T.STARTDATE, T.ENDDATE FROM tmp_z AS T LEFT JOIN tabel_oleav AS P  ON T.id = P.id WHERE P.id IS NULL ;")

	#DROP TEMP TABLE or auto drop after session
	cur.execute("DROP TABLE tmp_z;")

	#CLOSE CONNECTION
	con.commit()
	cur.close()
	con.close()
	print "sql requests for oleav table [ ok ]"


