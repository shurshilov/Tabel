#!/usr/bin/env python 
# -*- coding: UTF-8 -*-
from dbfpy import dbf
import psycopg2
import datetime
import sys
import parus_id_to_odoo
def pfcac_func(directory,dbname,userr,pas,hostt,portt):
	ank = dbf.Dbf(directory+"zdaytype.dbf")
	f_ank = open(directory+'daytype.csv', 'w')
	f_ank.write ("ID; NICK; NAME;\n")
	#print len(ank)
	for i in ank:
		if i.deleted or i["NICK"] == None or i ["NAME"] == None or  i ["DAYTYPE_RN"] == None  :
			continue
		f_ank.write ("\""+ str ( parus_id_to_odoo.parusIndexToOdoo ( i ["DAYTYPE_RN"].decode('cp1251').encode('utf-8').decode('utf-8'))) +"\""+"; ")
		f_ank.write ("\""+ str( i["NICK"].decode('cp1251').encode('utf-8') ) +"\""+ ";")
		f_ank.write ("\""+ str( i["NAME"].decode('cp1251').encode('utf-8') ) +"\""+ "\n")
	print "daytype.dbf to daytype.csv [ ok ]"	
	f_ank.close()
	#CONNECT TO DATABASE
	con = psycopg2.connect(database=dbname, user=userr,password=pas,host=hostt,port=portt)
	cur = con.cursor()
	#cur.execute ("DELETE from tabel_fcacwth;")
	#OPEN CSV FILE GENERATED BY syncronize.py script
	my_file = open(directory+'daytype.csv')

	#CREATE TEMP TABLE
	cur.execute("CREATE TEMP TABLE tmp_z (ID int unique, NICK  text, NAME text);") 
	cur.copy_expert("COPY tmp_z FROM STDIN WITH DELIMITER ';' CSV HEADER;", my_file)
	
	#UPDATE DATA
	cur.execute("UPDATE tabel_daytype SET  NICK=tmp_z.NICK, NAME=tmp_z.NAME FROM tmp_z WHERE  tabel_daytype.id = tmp_z.id;")

	#cur.execute("SELECT G.id, G.ANK_RN, G.POST_RN, G.SUBDIV_RN, G.VIDISP_RN, G.STARTDATE, G.ENDDATE FROM (SELECT T.id, T.ANK_RN, T.POST_RN, T.SUBDIV_RN, T.VIDISP_RN, T.STARTDATE, T.ENDDATE FROM tmp_z AS T LEFT JOIN tabel_fcac AS P  ON T.id = P.id WHERE P.id IS NULL) AS G, tabel_ank AS H where G.ank_rn = H.id  ;")
	#INSERT DATA add something which lacks.
	#add those records that are in the table tmp.z and not in the table fcacwth. And check that all the fields in the table fcac_rn existed fcac 
	cur.execute("INSERT INTO tabel_daytype (id, nick, name) SELECT G.id, G.NICK, G.NAME FROM (SELECT T.id, T.NICK, T.NAME FROM tmp_z AS T LEFT JOIN tabel_daytype AS P  ON T.id = P.id WHERE P.id IS NULL) AS G ;")
	
	#rows = cur.fetchall()
	#for i in rows:
	#	print i
	#DROP TEMP TABLE or auto drop after session
	cur.execute("DROP TABLE tmp_z;")

	#CLOSE CONNECTION
	con.commit()
	cur.close()
	con.close()
	print "sql requests for table daytype [ ok ]"


