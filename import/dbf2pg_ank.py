#!/usr/bin/env python 
# -*- coding: UTF-8 -*-
from dbfpy import dbf
import psycopg2
import datetime
import sys
import parus_id_to_odoo
def post_func(directory,dbname,userr,pas,hostt,portt):
	ank = dbf.Dbf(directory+"zank.dbf")
	f_ank = open(directory+'ank.csv', 'w')
	f_ank.write ("ID; ORGBASE_RN; TAB_NUM; JOBBEGIN; JOBEND\n")
	#print len(ank)
	for i in ank:
		if i.deleted or i["JOBBEGIN"] == None or i["JOBEND"] == None or i ["ANK_RN"] == None or i ["ORGBASE_RN"] == None:
			continue
		try:
        		int(i["TAB_NUM"])
			f_ank.write ("\""+ str ( parus_id_to_odoo.parusIndexToOdoo ( i ["ANK_RN"].decode('cp1251').encode('utf-8').decode('utf-8') ))+"\"" +"; ")
			f_ank.write ("\""+ str ( parus_id_to_odoo.parusIndexToOdoo ( i ["ORGBASE_RN"].decode('cp1251').encode('utf-8').decode('utf-8') ))+"\""+"; ")
			f_ank.write ("\""+ str ( i["TAB_NUM"] ).decode('cp1251').encode('utf-8')+"\""+"; ")
			f_ank.write ("\""+ str( i["JOBBEGIN"] ) +"\""+"; "+"\""+ str (i["JOBEND"] )+"\""+"\n")
		except ValueError:
			print "fixed error in database [ ok ]"

 	print "zank.dbf to ank.csv [ ok ]"
	f_ank.close()
	#CONNECT TO DATABASE
	con = psycopg2.connect(database=dbname, user=userr,password=pas,host=hostt,port=portt)
	cur = con.cursor()
	#cur.execute ("DELETE from tabel_ank;")
	
	#OPEN CSV FILE GENERATED BY syncronize.py script
	my_file = open(directory+'ank.csv')

	#CREATE TEMP TABLE
	cur.execute("CREATE TEMP TABLE tmp_z (ID int, ORGBASE_RN int, TAB_NUM int, JOBBEGIN date, JOBEND date);") 
	cur.copy_expert("COPY tmp_z FROM STDIN WITH DELIMITER ';' CSV HEADER;", my_file)

	#UPDATE DATA
	cur.execute("UPDATE tabel_ank SET  TAB_NUM=tmp_z.TAB_NUM, JOBBEGIN=tmp_z.JOBBEGIN, JOBEND=tmp_z.JOBEND FROM tmp_z WHERE  tabel_ank.id = tmp_z.id;")

	#INSERT DATA add something which lacks
	cur.execute("INSERT INTO tabel_ank (id, orgbase_rn, tab_num, jobend,jobbegin) SELECT T.id, T.ORGBASE_RN, T.TAB_NUM, T.JOBEND, T.JOBBEGIN FROM tmp_z AS T LEFT JOIN tabel_ank AS P  ON T.id = P.id WHERE P.id IS NULL ;")

	#DROP TEMP TABLE or auto drop after session
	cur.execute("DROP TABLE tmp_z;")

	#CLOSE CONNECTION
	con.commit()
	cur.close()
	con.close()
	print "sql requests for ank table [ ok ]"


